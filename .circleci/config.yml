# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
# jobs:
  # print_hello:
  #   # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
  #   # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
  #   docker:
  #     - image: circleci/node:13.8.0
  #   # Add steps to the job
  #   # See: https://circleci.com/docs/2.0/configuration-reference/#steps
  #   steps:
  #     - run: echo hello
  # print_world:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - run: echo world 
  # print_variable:
  #   docker:
  #     - image: cimg/base:2020.01
  #   steps:
  #     - run:
  #         name: "Echo an env var that is part of our project"
  #         command: |
  #           echo $Name
  
  # save_hello_world_output:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - run: echo "Hello World!!" > ~/output.txt
  #     - persist_to_workspace:
  #         root: ~/
  #         paths:
  #           - output.txt
  # print_output_file:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - attach_workspace:
  #         at: ~/
  #     - run: cat ~/output.txt 

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
# workflows:
  # welcome:
  #   jobs:
  #     - print_hello
  #     - print_world:
  #         requires:
  #           - print_hello
  #     - print_variable
  # modi_workflow:
  #   jobs: 
  #     - save_hello_world_output
  #     - print_output_file:
  #         requires:
  #           - save_hello_world_output

# commands: 
#   print_pipeline_id:
#     parameters:
#       id: 
#         type: string
#     steps: 
#       - run: echo <<parameters.id>>
# jobs: 
#   my_job:
#     docker:
#       - image: circleci/node:13.8.0
#     steps:
#       - print_pipeline_id:
#           id: <<pipeline.id>>
# workflows:
#   my_workflow:
#     jobs:
#       - my_job

jobs:
  my_job:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: exit 1
      - run:
          name: on error
          command: echo "Hello Error!"
          when: on_fail

workflows:
  my_workflow:
    jobs:
      - my_job